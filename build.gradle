plugins {
    id 'java'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'application'
    id 'jacoco'
    id 'org.openjfx.javafxplugin' version '0.0.14'
}

javafx {
    version = "17.0.2" // Replace with your required JavaFX version
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}


application {
    mainClass = 'seedu.address.Main'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

checkstyle {
    toolVersion = '10.2'
}

run {
    enableAssertions = true
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    jvmArgs = ['-ea']
}

task coverage(type: JacocoReport) {
    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)
    classDirectories.from files(sourceSets.main.output)
    executionData.from files(jacocoTestReport.executionData)
    afterEvaluate {
        classDirectories.from files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/*.jar'])
        })
    }
    reports {
        html.required = true
        xml.required = true
    }
}

dependencies {
    String javaFxVersion = '17.0.7'

    implementation "org.openjfx:javafx-base:$javaFxVersion"
    implementation "org.openjfx:javafx-controls:$javaFxVersion"
    implementation "org.openjfx:javafx-fxml:$javaFxVersion"
    implementation "org.openjfx:javafx-graphics:$javaFxVersion"

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.7.4'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.3'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.9.3'
}

shadowJar {
    archiveFileName = 'NomNomNotifier.jar'
}

tasks.build {
    dependsOn shadowJar
}

task stage(dependsOn: ['clean', 'build', 'shadowJar']) {
    doLast {
        println 'Stage task executed for Heroku deployment'
    }
}

defaultTasks 'clean', 'test'
